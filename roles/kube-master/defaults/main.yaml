# 提权操作
ansible_become: true

#----------------------------------------------- 基础参数 -------------------------------------------------#
_host_architecture_groups:
  x86_64: amd64
  aarch64: arm64
  armv7l: arm
host_architecture: >-
  {%- if ansible_architecture in _host_architecture_groups -%}
  {{ _host_architecture_groups[ansible_architecture] }}
  {%- else -%}
  {{ ansible_architecture }}
  {%- endif -%}

# kubernetes证书过期时间（天）
kube_certs_expired: 3650

# 加入集群token
kubeadm_token: "abcdef.0123456789abcdef"

# 负载后的apiserver端口号
lb_kube_apiserver_port: 8443

# k8s 集群 master 节点证书配置，可以添加多个ip和域名（比如增加公网ip和域名）
kube_master_external_ip:
- "8.8.8.8"

kube_master_external_domain:
- "kubernetes.io"

# Pod根容器
pod_infra_container_image: registry.aliyuncs.com/kubeadm-ha/pause:3.2
# kubernetes各组件镜像仓库前缀
kube_image_repository: registry.aliyuncs.com/kubeadm-ha
# kubernetes版本
kube_version: 1.20.1
# 集群内部dns域名
kube_dns_domain: cluster.local

# 集群 pod ip 段，共 16384 个ip
kube_pod_subnet: 10.244.0.0/18
# 集群 service ip 段
kube_service_subnet: 10.244.64.0/18
# 分配给节点的 pod 子网掩码位，默认为 24 即 256 个ip，故使用这些默认值可以纳管 16384/256=64 个节点。
kube_network_node_prefix: 24

# NodePort端口范围
kube_service_node_port_range: 30000-32767
# 资源保留相关配置
eviction_hard_imagefs_available: 15%
eviction_hard_memory_available: 100Mi
eviction_hard_nodefs_available: 10%
eviction_hard_nodefs_inodes_free: 5%

# kubernetes组件预留资源
kube_cpu_reserved: 100m
kube_memory_reserved: 256M
kube_ephemeral_storage_reserved: 1G

# # 操作系统守护进程预留资源
# system_reserved_enabled: true
# # 取消注释以覆盖默认值
# system_cpu_reserved: 500m
# system_memory_reserved: 512M
# system_ephemeral_storage_reserved: 10G

# 默认使用kube-proxy的 'iptables' 模式，可选 'ipvs' 模式(experimental)
kube_proxy_mode: "iptables"

# Kubelet 根目录
kubelet_root_dir: "/var/lib/kubelet"

# node节点最大pod 数
kube_max_pods: 110

## 存入 Etcd 时的 Secret 进行静态加密 
# 仅支持: aescbc, secretbox 或 aesgcm
kube_encryption_algorithm: "aescbc"
# 将Secret数据加密存储到etcd中的配置文件，下面加密码由 head -c 32 /dev/urandom | base64 生成
kube_encrypt_token: "GPG4RC0Vyk7+Mz/niQPttxLIeL4HF96oRCcBRyKNpfM="

## 审计相关配置
# 是否启用审计
kubernetes_audit: false
# 保留审计日志最大天数
audit_log_maxage: 30
# 保留审计日志最大个数
audit_log_maxbackups: 10
# 保留审计日志最大容量（MB）
audit_log_maxsize: 100
# 审计日志文件挂载在主机上的目录
audit_log_hostpath: /var/log/kubernetes/audit
# 审计策略配置文件路径
audit_policy_file: /etc/kubernetes/config/apiserver-audit-policy.yaml
# 自定义审计日志规则 (替换默认的审计规则)
# audit_policy_custom_rules: |
#   - level: None
#     users: []
#     verbs: []
#     resources: []

# 1.10+ admission plugins
kube_apiserver_enable_admission_plugins: 
- NodeRestriction
# - AlwaysPullImages
# - PodSecurityPolicy

# 1.10+ list of disabled admission plugins
kube_apiserver_disable_admission_plugins: []

# kube-controller-manager 标记 kubelet(node) 为不健康的周期
kube_controller_node_monitor_grace_period: 40s
# kube-controller-manager 定期检查 kubelet(node) 状态周期
kube_controller_node_monitor_period: 5s
# kube-controller-manager 判定节点故障，重建 Pod 的超时时间，默认值 5m0s，这里改为了 2m0s
kube_controller_pod_eviction_timeout: 2m0s
# exit 状态的 pod 超过多少会触发 gc，默认值 12500，这里改为了 10
kube_controller_terminated_pod_gc_threshold: 10

## Extra args for k8s components passing by kubeadm
kube_kubeadm_apiserver_extra_args: {}
kube_kubeadm_controller_extra_args: {}
kube_kubeadm_scheduler_extra_args: {}

## Extra control plane host volume mounts
## Example:
# apiserver_extra_volumes:
#  - name: name
#    hostPath: /host/path
#    mountPath: /mount/path
#    readOnly: true
apiserver_extra_volumes: {}
controller_manager_extra_volumes: {}
scheduler_extra_volumes: {}

# containerd 是否使用 systemd 作为 cgroup 驱动程序
containerd_use_systemd_cgroup: true

# 当前节点ip
CURRENT_HOST_IP: "{% if hostvars[inventory_hostname]['ansible_host'] is defined %}{{ hostvars[inventory_hostname]['ansible_host'] }}{% else %}{{ inventory_hostname }}{% endif %}"
# apiserver ip
KUBE_APISERVER_IP: >-
  {% if lb_kube_apiserver_ip is not defined %}
    127.0.0.1
  {% else %}
    {{ lb_kube_apiserver_ip }}
  {% endif %}

KUBERNETES_SERVICE_IP: "{{ kube_service_subnet | ipaddr('net') | ipaddr(1) | ipaddr('address') }}"
CLUSTER_DNS_SERVICE_IP: "{{ kube_service_subnet | ipaddr('net') | ipaddr(10) | ipaddr('address') }}"
# CRI socket path
CRI_SOCKET: >-
  {%- if container_manager_detected == 'containerd' -%}
  /var/run/containerd/containerd.sock
  {%- else -%}
  /var/run/dockershim.sock
  {%- endif -%}
# 镜像拉取命令
IMAGE_PULL_COMMAND: >-
  {%- if container_manager_detected == 'containerd' -%}
  crictl pull
  {%- else -%}
  docker pull
  {%- endif -%}
