# 提权操作
ansible_become: true

_host_architecture_groups:
  x86_64: amd64
  aarch64: arm64
  armv7l: arm
host_architecture: >-
  {%- if ansible_architecture in _host_architecture_groups -%}
  {{ _host_architecture_groups[ansible_architecture] }}
  {%- else -%}
  {{ ansible_architecture }}
  {%- endif -%}

# kubernetes版本
kube_version: 1.20.1

# Etcd使用的镜像
etcd_image: registry.aliyuncs.com/kubeadm-ha/etcd:3.4.13-0
# Pod根容器
pod_infra_container_image: registry.aliyuncs.com/kubeadm-ha/pause:3.2
# Kubelet 根目录
kubelet_root_dir: "/var/lib/kubelet"
# Etcd 数据根目录
etcd_data_dir: "/var/lib/etcd"
# Etcd 每日备份时间，默认3，即凌晨3点，取值范围0-23
etcd_backup_hour: "3"
# Etcd 每日备份文件保留时长，默认7天
etcd_backup_expiry: "7"

# containerd 是否使用 systemd 作为 cgroup 驱动程序
containerd_use_systemd_cgroup: true

# 当前节点ip
CURRENT_HOST_IP: "{% if hostvars[inventory_hostname]['ansible_host'] is defined %}{{ hostvars[inventory_hostname]['ansible_host'] }}{% else %}{{ inventory_hostname }}{% endif %}"
# etcd 集群
INITIAL_CLUSTER: "{% for host in ((groups['etcd'] + groups['new-etcd'])|unique) %}{% if hostvars[host]['ansible_host'] is defined %}etcd-{{ host }}=https://{{ hostvars[host]['ansible_host'] }}:2380{% else %}etcd-{{ host }}=https://{{ host }}:2380{% endif %}{% if not loop.last %},{% endif %}{% endfor %}"
# etcd 集群初始状态 new/existing
CLUSTER_STATE: "{% if etcd_static_pod_stat.stat.exists or (inventory_hostname in (groups['new-etcd'])) %}existing{% else %}new{% endif %}"
# 新增 etcd 节点添加信息
NEW_MEMBER: "etcd-{{ inventory_hostname }} {% if hostvars[inventory_hostname]['ansible_host'] is defined %}--peer-urls=https://{{ hostvars[inventory_hostname]['ansible_host'] }}:2380{% else %}--peer-urls=https://{{ inventory_hostname }}:2380{% endif %}"
# CRI socket path
CRI_SOCKET: >-
  {%- if container_manager_detected == 'containerd' -%}
  /var/run/containerd/containerd.sock
  {%- else -%}
  /var/run/dockershim.sock
  {%- endif -%}
# kubelet 启动参数
KUBELET_ARGS_BASE: >-
  --address=127.0.0.1
  {% if container_manager_detected == 'containerd' %}
  --container-runtime=remote
  --container-runtime-endpoint=unix://{{ CRI_SOCKET }}
  {% else %}
  --pod-infra-container-image={{ pod_infra_container_image }}
  {% endif %}
  --root-dir={{ kubelet_root_dir }}
  --hostname-override={{ inventory_hostname }}
  --pod-manifest-path=/etc/kubernetes/manifests
  --cgroup-driver={{ kubelet_cgroup_driver|default(kubelet_cgroup_driver_detected) }}
# 镜像拉取命令
IMAGE_PULL_COMMAND: >-
  {%- if container_manager_detected == 'containerd' -%}
  crictl pull
  {%- else -%}
  docker pull
  {%- endif -%}