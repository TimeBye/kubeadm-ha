# 提权操作
ansible_become: true
# 集群pod ip段
kube_pod_subnet: 10.244.0.0/18
# 集群service ip段
kube_service_subnet: 10.244.64.0/18

_host_architecture_groups:
  x86_64: amd64
  aarch64: arm64
  armv7l: arm
host_architecture: >-
  {%- if ansible_architecture in _host_architecture_groups -%}
  {{ _host_architecture_groups[ansible_architecture] }}
  {%- else -%}
  {{ ansible_architecture }}
  {%- endif -%}

_host_distribution_groups:
  uos: debian
host_distribution: >-
  {%- if ansible_distribution in _host_distribution_groups -%}
  {{ _host_distribution_groups[ansible_distribution] }}
  {%- else -%}
  {{ ansible_distribution }}
  {%- endif -%}

host_distribution_release: >-
  {%- if (ansible_distribution_release == 'n/a') or (ansible_distribution_release is not defined) or (ansible_distribution_release == '') -%}
  buster
  {%- else -%}
  {{ ansible_distribution_release }}
  {%- endif -%}

# Docker版本
# apt-cache madison docker-ce
# yum list docker-ce --showduplicates --enablerepo=docker-ce | sort -r
docker_version: 19.03.13
containerd_version: 1.3.7-1
# CentOS
docker_yum_repo: https://mirrors.aliyun.com/docker-ce/linux/centos/{{ ansible_distribution_major_version }}/$basearch/stable
# Debian
# sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 7EA0A9C3F273FCD8
docker_apt_repo: "deb [arch={{ host_architecture }}] https://mirrors.aliyun.com/docker-ce/linux/{{ host_distribution | lower }} {{ host_distribution_release }} stable"

# 国内镜像加速
docker_mirror: 
# - "https://reg-mirror.qiniu.com"
# - "https://hub-mirror.c.163.com"
# - "https://docker.mirrors.ustc.edu.cn"

# 信任的不安全镜像库地址，默认为 Pod 和 Service 网段
docker_insecure_registries:
- "{{ kube_pod_subnet }}"
- "{{ kube_service_subnet }}"

# docker日志相关
docker_log_driver: "json-file"
docker_log_level: "warn"
docker_log_max_size: "10m"
docker_log_max_file: 3

# docker容器存储目录
docker_storage_dir: "/var/lib/docker"

# 并行镜像下载数量
docker_max_concurrent_downloads: 10

containerd_storage_dir: "/var/lib/containerd"
containerd_state_dir: "/run/containerd"
containerd_oom_score: -999
containerd_use_systemd_cgroup: true
containerd_debug_level: ""
containerd_config_grpc:
  max_recv_message_size: 16777216
  max_send_message_size: 16777216
containerdmax_container_log_line_size: -1
containerd_plugins_cri_registries_mirrors:
  "docker.io": "https://registry-1.docker.io"

# Example for containerd_plugins_cri_containerd:
# containerd_plugins_cri_containerd:
#   snapshotter: native
containerd_plugins_cri_containerd: {}

containerd_default_runtime:
  type: io.containerd.runtime.v1.linux
  engine: ''
  root: ''

containerd_untrusted_workload_runtime:
  type: ''
  engine: ''
  root: ''

# Additional runtimes for containerd configuration
#
# Example for Kata Containers:
# containerd_runtimes:
#   - name: kata
#     type: io.containerd.kata.v2
#     engine: ""
#     root: ""
containerd_runtimes: []

# Pod根容器
pod_infra_container_image: registry.aliyuncs.com/kubeadm-ha/pause:3.2

# container 运行时类型
container_manager: containerd

# CRI socket path
CRI_SOCKET: >-
  {%- if container_manager == 'containerd' -%}
  /var/run/containerd/containerd.sock
  {%- else -%}
  /var/run/dockershim.sock
  {%- endif -%}