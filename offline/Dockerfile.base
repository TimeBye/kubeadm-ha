FROM registry:2 AS registry
FROM nginx:1.19
ARG TARGETARCH
ENV LANG=C.UTF-8

COPY --from=registry /bin/registry /bin/registry
COPY --from=registry /etc/docker/registry/config.yml /etc/docker/registry/config.yml

COPY --chmod=755 sync-images.sh /usr/bin/sync-images
COPY default.conf /etc/nginx/conf.d/default.conf
COPY ${TARGETARCH}/registry /var/lib/registry
COPY ${TARGETARCH}/kubernetes-yum /kubernetes/yum

RUN DEBIAN_FRONTEND=noninteractive; \
    apt-get update; \
    apt-get install -y \
      git \
      tini \
      rsync \
      sshpass \
      python3-pip \
      openssh-client; \
    . /etc/os-release; \
    echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/Debian_${VERSION_ID}/ /" | tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list; \
    curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/Debian_${VERSION_ID}/Release.key | apt-key add -; \
    apt-get update; \
    apt-get install -y \
      skopeo; \
    rm -rf /var/lib/apt/lists/*; \
    apt-get clean

RUN pip3 install --upgrade pip cffi; \
    pip install ansible==2.10.7 netaddr

RUN dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"; \
    case "${dpkgArch}" in \
      amd64|x86_64) \
        curl -sSLo /kubernetes/helm-v3.5.4-linux-amd64.tar.gz https://get.helm.sh/helm-v3.5.4-linux-amd64.tar.gz; \
        ;; \
      aarch64|arm64) \
        curl -sSLo /kubernetes/helm-v3.5.4-linux-arm64.tar.gz https://get.helm.sh/helm-v3.5.4-linux-arm64.tar.gz; \
        ;; \
    esac

RUN cp /etc/apt/sources.list /etc/apt/sources.list.orig.bak; \
    sed -i 's http://.*.debian.org http://mirrors.aliyun.com g' /etc/apt/sources.list
